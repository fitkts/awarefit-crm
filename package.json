{
  "name": "awarefit-crm",
  "version": "1.0.0",
  "description": "피트니스 회원 관리 시스템 - Awarefit CRM",
  "main": "dist/main/main.js",
  "homepage": "./",
  "scripts": {
    "start": "electron .",
    "dev": "concurrently \"npm run dev:webpack\" \"npm run dev:electron\"",
    "dev:webpack": "webpack serve --config webpack.config.js --mode development & echo 'Webpack dev server is ready!'",
    "dev:electron": "tsc -p tsconfig.main.json && electron electron-entry.js",
    "build": "npm run clean && npm run type-check && npm run lint && npm run compile && webpack --mode production",
    "build:electron": "electron-builder --publish=never",
    "compile": "tsc -p tsconfig.main.json",
    "clean": "rimraf dist",
    "quick-start": "npm run clean && npm run compile && npm run dev",
    "fresh-start": "npm run clean && npm install && npm run compile && npm run dev",
    "safe-build": "npm run clean && npm run type-check && npm run lint:fix && npm run compile && webpack --mode production",
    "health-check": "node scripts/health-check.js",
    "health-check:basic": "npm run type-check && npm run lint && echo '✅ 기본 상태가 정상입니다!'",
    "verify-member-data": "node scripts/verify-member-data.js",
    "db:init": "node scripts/init-database.js",
    "db:reset": "echo '데이터베이스 초기화 예정'",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ui": "jest --watch --verbose",
    "test:silent": "jest --silent",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --runInBand",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "lint": "eslint src --ext .ts,.tsx --max-warnings 0",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "lint:watch": "chokidar \"src/**/*.{ts,tsx}\" -c \"npm run lint\"",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "check-all": "npm run type-check && npm run lint && npm run format:check",
    "fix-all": "npm run lint:fix && npm run format && echo '🎉 코드 자동 수정 완료!'",
    "auto-fix-all": "node scripts/auto-fix-all.js",
    "reinstall": "rm -rf node_modules package-lock.json && npm install",
    "doctor": "npm run health-check && npm audit && echo '🏥 프로젝트 진단 완료!'",
    "release": "npm run safe-build && npm run build:electron",
    "precommit": "npm run fix-all && npm run health-check",
    "prepare": "husky",
    "commit": "cz",
    "commit:retry": "cz --retry",
    "deps:check": "npm outdated",
    "deps:update": "npm update",
    "deps:audit": "npm audit fix",
    "dev:clean": "npm run clean && npm run dev",
    "dev:reset": "npm run clean && rm -rf node_modules && npm install && npm run dev",
    "dev:debug": "NODE_ENV=development DEBUG=* npm run dev",
    "build:analyze": "node scripts/analyze-bundle.js",
    "analyze": "node scripts/analyze-bundle.js",
    "size:check": "npm run build && ls -la dist/",
    "env:check": "node -e \"console.log(process.env)\" | grep -E \"NODE_|npm_\"",
    "scripts:list": "npm run | grep -E \"^[a-z]\"",
    "git:status": "git status",
    "git:log": "git log --oneline --graph -10",
    "git:save": "npm run fix-all && git add . && git status",
    "git:commit": "git commit",
    "git:push": "git push",
    "git:pull": "git pull",
    "git:sync": "git add . && git commit -m '💾 자동 저장 - 작업 중간 백업' && git push",
    "git:backup": "npm run fix-all && git add . && git commit -m '💾 일일 백업 - $(date)' && git push && echo '🎉 백업 완료!'",
    "git:undo": "git reset --soft HEAD~1 && echo '⚠️ 마지막 커밋이 취소되었습니다.'",
    "git:diff": "git diff",
    "git:setup": "echo '🔧 Git 초기 설정 가이드:' && echo '1. git config --global user.name \"당신의이름\"' && echo '2. git config --global user.email \"your.email@example.com\"' && echo '3. GitHub에 새 저장소 생성' && echo '4. npm run git:first-push'",
    "git:first-push": "node scripts/first-push.js",
    "backup": "node scripts/backup-restore.js --backup",
    "backup:quick": "node scripts/backup-restore.js --backup-quick",
    "restore": "node scripts/backup-restore.js --restore",
    "backup:list": "node scripts/backup-restore.js --list",
    "backup:cleanup": "node scripts/backup-restore.js --cleanup",
    "backup:setup": "node scripts/backup-restore.js --auto-setup",
    "deploy:check": "node scripts/deploy.js --check",
    "deploy:prepare": "node scripts/deploy.js --prepare",
    "deploy:full": "node scripts/deploy.js --full",
    "deploy": "node scripts/deploy.js",
    "perf:monitor": "node scripts/performance-monitor.js --monitor",
    "perf:analyze": "node scripts/performance-monitor.js --analyze",
    "perf:optimize": "node scripts/performance-monitor.js --optimize",
    "perf:report": "node scripts/performance-monitor.js --report",
    "perf:benchmark": "node scripts/performance-monitor.js --benchmark",
    "perf": "node scripts/performance-monitor.js",
    "migrate:check": "node scripts/migrate.js --check",
    "migrate:run": "node scripts/migrate.js --run",
    "migrate:rollback": "node scripts/migrate.js --rollback",
    "migrate:status": "node scripts/migrate.js --status",
    "migrate:create": "node scripts/migrate.js --create",
    "migrate": "node scripts/migrate.js",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "quality": "node scripts/quality-dashboard.js",
    "checklist": "node scripts/auto-checklist.js",
    "validate-sql": "node scripts/validate-sql-handlers.js",
    "verify": "npm run type-check && npm run lint && npm run quality",
    "setup-error-detection": "node -e \"const { setupErrorDetection } = require('./src/utils/errorDetector'); setupErrorDetection(); console.log('오류 감지 시스템 활성화됨');\"",
    "error-stats": "node -e \"const { printErrorStats, generateErrorReportFile } = require('./src/utils/errorDetector'); printErrorStats(); generateErrorReportFile();\"",
    "rebuild": "npm rebuild && npx electron-rebuild",
    "rebuild:electron": "npx electron-rebuild",
    "rebuild:safe": "npm install better-sqlite3 --no-save && npx electron-rebuild",
    "fix-sqlite3": "node scripts/fix-better-sqlite3.js",
    "postinstall": "npx electron-rebuild || echo '⚠️ electron-rebuild failed, but continuing...'",
    "rebuild:electron:force": "cd node_modules/better-sqlite3 && env npm_config_target=$(npx electron --version | sed 's/v//') npm_config_arch=x64 npm_config_target_arch=x64 npm_config_disturl=https://electronjs.org/headers npm_config_runtime=electron npm_config_build_from_source=true npm run install"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "keywords": [
    "fitness",
    "gym",
    "crm",
    "member-management",
    "electron",
    "react",
    "typescript"
  ],
  "author": "Awarefit CRM Team",
  "license": "MIT",
  "build": {
    "appId": "com.awarefit.crm",
    "productName": "Awarefit CRM",
    "directories": {
      "output": "release"
    },
    "files": [
      "dist/**/*",
      "node_modules/**/*"
    ],
    "mac": {
      "category": "public.app-category.business"
    },
    "win": {
      "target": "nsis"
    }
  },
  "dependencies": {
    "better-sqlite3": "^12.2.0",
    "date-fns": "^4.1.0",
    "electron": "^32.2.6",
    "lucide-react": "^0.468.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.54.0",
    "zod": "^3.23.8",
    "zustand": "^5.0.1"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@electron/rebuild": "^4.0.1",
    "@playwright/test": "^1.54.1",
    "@storybook/addon-docs": "^9.0.18",
    "@storybook/addon-onboarding": "^9.0.18",
    "@storybook/addon-webpack5-compiler-swc": "^3.0.0",
    "@storybook/react-webpack5": "^9.0.18",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/better-sqlite3": "^7.6.11",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.10.2",
    "@types/react": "^18.3.12",
    "@types/react-dom": "^18.3.1",
    "@typescript-eslint/eslint-plugin": "^8.39.0",
    "@typescript-eslint/parser": "^8.39.0",
    "autoprefixer": "^10.4.20",
    "buffer": "^6.0.3",
    "chokidar-cli": "^3.0.0",
    "commitizen": "^4.3.1",
    "concurrently": "^9.1.0",
    "cross-env": "^10.0.0",
    "crypto-browserify": "^3.12.1",
    "css-loader": "^7.1.2",
    "cz-conventional-changelog": "^3.0.1",
    "electron-builder": "^25.1.8",
    "electron-rebuild": "^3.2.9",
    "esbuild": "^0.25.8",
    "esbuild-loader": "^4.3.0",
    "eslint": "^8.57.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-storybook": "^9.0.18",
    "eslint-plugin-unused-imports": "^4.1.4",
    "events": "^3.3.0",
    "global": "^4.4.0",
    "html-webpack-plugin": "^5.6.3",
    "husky": "^9.1.7",
    "jest-environment-jsdom": "^30.0.5",
    "lint-staged": "^16.1.2",
    "nodemon": "^3.1.10",
    "postcss": "^8.5.6",
    "postcss-loader": "^8.1.1",
    "prettier": "^3.6.2",
    "process": "^0.11.10",
    "rimraf": "^6.0.1",
    "storybook": "^9.0.18",
    "stream-browserify": "^3.0.0",
    "style-loader": "^4.0.0",
    "tailwindcss": "^3.4.17",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.2",
    "util": "^0.12.5",
    "webpack": "^5.97.1",
    "webpack-bundle-analyzer": "^4.10.2",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.2.1"
  }
}
