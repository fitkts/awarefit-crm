name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18.x'

jobs:
  # 1단계: 코드 품질 검사 및 단위 테스트
  quality-check:
    name: 코드 품질 검사
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 의존성 설치
        run: npm ci

      - name: TypeScript 타입 체크
        run: npm run type-check

      - name: ESLint 검사
        run: npm run lint

      - name: Jest 단위 테스트
        run: npm run test:coverage

      - name: 커버리지 업로드
        uses: codecov/codecov-action@v3
        if: success()
        with:
          file: ./coverage/lcov.info

  # 2단계: 웹 빌드 테스트
  web-build:
    name: 웹 빌드 테스트
    runs-on: ubuntu-latest
    needs: quality-check

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 의존성 설치
        run: npm ci

      - name: 웹 빌드
        run: npm run build

      - name: 빌드 아티팩트 저장
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: dist/
          retention-days: 1

  # 3단계: E2E 테스트 (웹 환경)
  e2e-tests:
    name: E2E 테스트 (웹)
    runs-on: ubuntu-latest
    needs: web-build

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 의존성 설치
        run: npm ci

      - name: Playwright 브라우저 설치
        run: npx playwright install --with-deps chromium

      - name: E2E 테스트 실행
        run: npx playwright test

      - name: 테스트 결과 업로드 (실패 시)
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: 스크린샷 업로드 (실패 시)
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-screenshots
          path: test-results/
          retention-days: 7

  # 4단계: Electron 빌드 테스트
  electron-build:
    name: Electron 빌드 테스트
    runs-on: ${{ matrix.os }}
    needs: quality-check

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 의존성 설치
        run: npm ci

      - name: Electron 빌드
        run: npm run build:electron

      - name: Electron 빌드 아티팩트 저장
        uses: actions/upload-artifact@v3
        with:
          name: electron-build-${{ matrix.os }}
          path: release/
          retention-days: 7

  # 5단계: 통합 테스트 및 보고서
  integration-report:
    name: 통합 테스트 보고서
    runs-on: ubuntu-latest
    needs: [quality-check, web-build, e2e-tests, electron-build]
    if: always()

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: 테스트 결과 다운로드
        uses: actions/download-artifact@v3
        with:
          name: playwright-report
          path: playwright-report/
        continue-on-error: true

      - name: 테스트 보고서 생성
        run: |
          echo "## 🧪 CI/CD 테스트 결과 요약" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ 완료된 테스트" >> $GITHUB_STEP_SUMMARY
          echo "- 코드 품질 검사: ${{ needs.quality-check.result }}" >> $GITHUB_STEP_SUMMARY  
          echo "- 웹 빌드: ${{ needs.web-build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- E2E 테스트: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Electron 빌드: ${{ needs.electron-build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 상세 정보" >> $GITHUB_STEP_SUMMARY
          echo "- 브랜치: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- 커밋: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- 실행자: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
